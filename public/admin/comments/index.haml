%h2= t('listing_comments')
.bulk_deletion
  .spam= link_to t('comment_delete_spam'), url('/admin/comments/spam'), id: 'delete_spam', class: 'button', confirm: t('are_you_sure'), method: :delete
  - form_tag url('/admin/comments/selected'), id: 'comment_select', class: 'selected', method: :delete do
    = hidden_field_tag :selected_comment_ids
    = button_tag t('comment_delete_selected'), class: 'button', :'data-confirmation' => t('comment_delete_confirmation')
#table_wrapper
  %table.comments
    %tr
      %th.checkbox= t('comment_select')
      %th= t('comment_status')
      %th= t('comment.body')
      %th= t('comment.name')
      %th= t('comment.created_at')
      %th{ colspan: 2 }
    - @comments.each_with_index do |comment, i|
      %tr{ class: (i + 1).odd? ? :odd : :even }
        :ruby
          status = case comment.status
                   when Comment::APPROVED
                     t('comment_approved')
                   when Comment::MODERATED
                     t('comment_moderated')
                   when Comment::SPAM
                     t('comment_spam')
                   end
        %td.checkbox= check_box_tag :comment_select, value: comment.id
        %td= status
        %td.body= link_to truncate(strip_tags(comment.body)), url(comment.link)
        %td= comment.name
        %td= l(comment.created_at, format: :long)
        %td= link_to t('edit'), url("/admin/comments/#{comment.id}/edit"), class: :button
        %td= link_to t('delete'), url("/admin/comments/#{comment.id}"), class: :button, confirm: t('are_you_sure'), method: :delete
.pager
  %ul
    - if @comments.pager.previous_page
      %li.previous= link_to t('previous'), "?page=#{@comments.pager.previous_page}"
    - if @comments.pager.next_page
      %li.next= link_to t('next'), "?page=#{@comments.pager.next_page}"

:javascript
  const commentSelectForm = document.querySelector('#comment_select')
  const button = document.querySelector('input[type="button"]');
  button.addEventListener('click', () => {
    const nodeList = document.querySelectorAll('input[type="checkbox"][name="comment_select"]');
    const checkboxes = [].map.call(nodeList, element => element)
    const selected = checkboxes.filter(element => element.checked).map(element => element.value);
    const message = button.dataset.confirmation.replace(/\s%d\s/, selected.length);
    if (selected.length > 0 && window.confirm(message)) {
      commentSelectForm.selected_comment_ids.setAttribute('value', selected);
      commentSelectForm.submit();
    }
  })
